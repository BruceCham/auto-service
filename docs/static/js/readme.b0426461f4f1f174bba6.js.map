{"version":3,"sources":["/Users/yangqianjun/Documents/project/sm2tsservice/__tests__/Doc.tsx","/Users/yangqianjun/Documents/project/sm2tsservice/CHANGELOG.md","/Users/yangqianjun/Documents/project/sm2tsservice/README.mdx"],"names":["IGuardConfig","React","IYAPIConfig","ISwaggerParser","IJson2Service","IRequest","ISwaggerConfig","layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","of"],"mappings":"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","file":"static/js/readme.ff9609de.js","sourcesContent":["/**\n * @file: 生成文档用\n * @author: yangqianjun\n * @Date: 2020-01-14 16:28:13\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-01-14 17:06:29\n */\n\nimport * as React from 'react';\nimport { CoreOptions } from 'request';\nimport { GuardConfig, YAPIConfig, SwaggerParser, Json2Service } from '../src/consts';\n\nexport class IGuardConfig extends React.Component<GuardConfig> { }\nexport class IYAPIConfig extends React.Component<YAPIConfig> { }\nexport class ISwaggerParser extends React.Component<SwaggerParser> { }\nexport class IJson2Service extends React.Component<Json2Service> { }\nexport class IRequest extends React.Component<{ url?: string } & CoreOptions> { }\nexport class ISwaggerConfig extends React.Component<Json2Service['swaggerConfig']> { }\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"340-2020-07-14\"\n    }}>{`3.4.0 (2020-07-14)`}</h1>\n    <h3 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`支持接口调用入参,数据返回格式校验 (`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/gogoyqj/sm2tsservice/commit/1b441ed113702060ece2062936ff1bf62fc33d8b\"\n        }}>{`1b441ed`}</a>{`)`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Props } from 'docz';\nimport {\n  IGuardConfig,\n  IYAPIConfig,\n  ISwaggerParser,\n  IJson2Service,\n  IRequest,\n  ISwaggerConfig\n} from './__tests__/Doc.tsx';\nimport CHANGELOG from './CHANGELOG.md';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"npm-i--d-sm2tsservice\"\n    }}><inlineCode parentName=\"h1\">{`npm i -D sm2tsservice`}</inlineCode></h1>\n    <p>{`根据 swagger 或者 yapi mock json 生成 typescript service 代码`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"1-cli\"\n    }}>{`1. CLI`}</h2>\n    <h2 {...{\n      \"id\": \"11-配置文件\"\n    }}>{`1.1 配置文件`}</h2>\n    <p>{`edit `}<inlineCode parentName=\"p\">{`json2service.json`}</inlineCode>{`，也可用 `}<inlineCode parentName=\"p\">{`xxx.js`}</inlineCode>{`，然后配置 `}<inlineCode parentName=\"p\">{`-c xxx.js`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"111-cli-配置\"\n    }}>{`1.1.1 CLI 配置`}</h2>\n    <Props of={IJson2Service} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"112-swaggerparser\"\n    }}>{`1.1.2 `}<inlineCode parentName=\"h2\">{`swaggerParser`}</inlineCode></h2>\n    <Props of={ISwaggerParser} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"113-guardconfig\"\n    }}>{`1.1.3 `}<inlineCode parentName=\"h2\">{`guardConfig`}</inlineCode></h2>\n    <Props of={IGuardConfig} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"124-yapiconfig\"\n    }}>{`1.2.4 `}<inlineCode parentName=\"h2\">{`yapiConfig`}</inlineCode></h2>\n    <Props of={IYAPIConfig} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"124-requestconfig\"\n    }}>{`1.2.4 `}<inlineCode parentName=\"h2\">{`requestConfig`}</inlineCode></h2>\n    <Props of={IRequest} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"125-swaggerconfig\"\n    }}>{`1.2.5 `}<inlineCode parentName=\"h2\">{`swaggerConfig`}</inlineCode></h2>\n    <Props of={ISwaggerConfig} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"12-example\"\n    }}>{`1.2 Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"url\": \"./api.json\", // 文件路径\n  \"remoteUrl\": \"http://**\", // url\n  \"requestConfig\": {\n    \"url\": \"./api.json\" // 文件路径或url\n    // 以下所有 request 支持的参数\n    // headers?: Headers;\n    // baseUrl?: string;\n    // callback?: RequestCallback;\n    // jar?: CookieJar | boolean;\n    // formData?: { [key: string]: any };\n    // form?: { [key: string]: any } | string;\n    // auth?: AuthOptions;\n    // oauth?: OAuthOptions;\n    // aws?: AWSOptions;\n    // hawk?: HawkOptions;\n    // qs?: any;\n    // qsStringifyOptions?: any;\n    // qsParseOptions?: any;\n    // json?: any;\n    // jsonReviver?: (key: string, value: any) => any;\n    // jsonReplacer?: (key: string, value: any) => any;\n    // multipart?: RequestPart[] | Multipart;\n    // agent?: http.Agent | https.Agent;\n    // agentOptions?: http.AgentOptions | https.AgentOptions;\n    // agentClass?: any;\n    // forever?: any;\n    // host?: string;\n    // port?: number;\n    // method?: string;\n    // body?: any;\n    // family?: 4 | 6;\n    // followRedirect?: boolean | ((response: http.IncomingMessage) => boolean);\n    // followAllRedirects?: boolean;\n    // followOriginalHttpMethod?: boolean;\n    // maxRedirects?: number;\n    // removeRefererHeader?: boolean;\n    // encoding?: string | null;\n    // pool?: any;\n    // timeout?: number;\n    // localAddress?: string;\n    // proxy?: any;\n    // tunnel?: boolean;\n    // strictSSL?: boolean;\n    // rejectUnauthorized?: boolean;\n    // time?: boolean;\n    // gzip?: boolean;\n    // preambleCRLF?: boolean;\n    // postambleCRLF?: boolean;\n    // withCredentials?: boolean;\n    // key?: Buffer;\n    // cert?: Buffer;\n    // passphrase?: string;\n    // ca?: string | Buffer | string[] | Buffer[];\n    // har?: HttpArchiveRequest;\n    // useQuerystring?: boolean;\n  },\n  \"type\": \"yapi\",\n  \"yapiConfig\": {\n    \"required\": false,\n    \"bodyJsonRequired\": false,\n    \"categoryMap\": {\n      \"中文\": \"English\" // yapi 接口分类中英文映射\n    }\n  },\n  \"swaggerParser\": {\n    \"-o\": \"tmp/services\"\n  },\n  \"validateResponse\": false, // 是否生成校验逻辑\n  \"guardConfig\": {\n    // + strict 严格模式\n    //    - 校验 swagger tags【yapi 接口分类】是否是纯英文\n    //    - 方法名使用 http method + url 驼峰形式\n    //    - 新项目采用\n    // + safe 安全模式\n    //    - 方法名使用 http method + url 驼峰形式\n    //    - 老项目升级，不会校验 tags，会生成方法调用替换映射表\n    // + 默认\n    //    - http method + url => operationId 映射锁定\n    //    - 老项目维持现状\n    \"mode\": \"strict\",\n    // swagger 处理重复 operationId 逻辑有风险，因此需要锁定映射关系\n    \"methodUrl2OperationIdMap\": {\n      \"get /api/xxx/xxx\": \"operationId\"\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"13-生成-service-代码\"\n    }}>{`1.3 生成 service 代码`}</h2>\n    <h3 {...{\n      \"id\": \"命令行\"\n    }}>{`命令行`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`  ./node_modules/.bin/sm2tsservice # 使用默认配置\n  ./node_modules/.bin/sm2tsservice -c config.json # 指定配置文件\n  ./node_modules/.bin/sm2tsservice --clear # 清空上次生成产物\n  ./node_modules/.bin/sm2tsservice --quiet # 自动全量使用远程文档，不显示 diff & merge 页面\n  ./node_modules/.bin/sm2tsservice --models # 仅生成 models\n  ./node_modules/.bin/sm2tsservice --models --apis # 仅生成 models & apis\n  ./node_modules/.bin/sm2tsservice --typeScriptDataFile TypeSciptData.json # 仅生成类型信息 json 到 TypeSciptData.json\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"npm-run\"\n    }}>{`npm run`}</h3>\n    <p>{`写入 `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`，通过 `}<inlineCode parentName=\"p\">{`npm run api`}</inlineCode>{` 使用`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"scripts\": {\n    \"api\": \"sm2tsservice --clear\"\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"2-ajax-接口\"\n    }}>{`2. ajax 接口`}</h2>\n    <p>{`实现 ajax 类【如果使用的 axios，且后端返回数据结构遵循 `}<inlineCode parentName=\"p\">{`{ code?:number;message?:string;result: any }`}</inlineCode>{`】`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/tkit-ajax\"\n      }}>{`详情 tkit-ajax`}</a></p>\n    <h2 {...{\n      \"id\": \"3-增量更新\"\n    }}>{`3. 增量更新`}</h2>\n    <p>{`自 @3.1.`}{`*`}{` 版本起，支持增量更新`}</p>\n    <h3 {...{\n      \"id\": \"流程\"\n    }}>{`流程`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`配置文件变更`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`url - 必须指向本地 swagger 文件【如文件不存在，在获取 remoteUrl 指定地址内容后，创建该文件`}</li>\n          <li parentName=\"ul\">{`remoteUrl - url 地址，即之前的 url`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`执行 CLI 生成代码`}</li>\n      <li parentName=\"ul\">{`CLI 对本地 swagger 文件和远程 swagger 文件进行 DIFF`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`有差异`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`打开浏览器，人工选择需要同步的差异，点保存`}</li>\n              <li parentName=\"ul\">{`CLI patch delta`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`无差异`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`直接下一步`}</li>\n            </ul></li>\n        </ul></li>\n      <li parentName=\"ul\">{`CLI 生成 service 代码`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"4-changelog\"\n    }}>{`4. CHANGELOG`}</h2>\n\n    <CHANGELOG mdxType=\"CHANGELOG\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}